// +build ignore

package main

import (
	"bytes"
	"html/template"
	"log"
	"os"
	"os/exec"
	"strings"
)

var tmpl = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
package initanalysis

import (
	"golang.org/x/tools/go/packages"
)

func isStdlib(pkg *packages.Package) bool {
	switch pkg.PkgPath {
	{{- range .Pkgs }}
	case "{{ . }}":
		return true
	{{- end }}
	default:
		return false
	}
}
`))

func main() {
	var out bytes.Buffer

	cmd := exec.Command("go", "list", "std")
	cmd.Stdout = &out

	if err := cmd.Run(); err != nil {
		log.Fatal(err)
	}

	packages := strings.Split(out.String(), "\n")

	f, err := os.Create("stdlib.go")
	if err != nil {
		log.Fatal(err)
	}
	defer f.Close()

	tmpl.Execute(f, struct {
		Pkgs []string
	}{
		Pkgs: packages,
	})
}
